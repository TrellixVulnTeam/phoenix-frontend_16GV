"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNormalizedHostingConfig = exports.getInquirer = exports.getFirebaseTools = void 0;
const child_process_1 = require("child_process");
let firebaseToolsPath;
let firebaseTools;
const getFirebaseTools = () => firebaseTools || (firebaseTools = new Promise((resolve, reject) => {
    try {
        firebaseToolsPath = 'firebase-tools';
        resolve(require(firebaseToolsPath));
    }
    catch (e) {
        try {
            const root = (0, child_process_1.execSync)('npm root -g').toString().trim();
            firebaseToolsPath = `${root}/firebase-tools`;
            resolve(require(firebaseToolsPath));
        }
        catch (e) {
            console.log('Installing firebase-tools...');
            (0, child_process_1.spawn)('npm', ['i', '-g', 'firebase-tools'], {
                stdio: 'pipe',
            }).on('close', (code) => {
                if (code === 0) {
                    const root = (0, child_process_1.execSync)('npm root -g').toString().trim();
                    resolve(require(`${root}/firebase-tools`));
                }
                else {
                    reject();
                }
            });
        }
    }
}));
exports.getFirebaseTools = getFirebaseTools;
const getInquirer = () => require(`${firebaseToolsPath}/node_modules/inquirer`);
exports.getInquirer = getInquirer;
const getNormalizedHostingConfig = () => require(`${firebaseToolsPath}/lib/hosting/normalizedHostingConfigs`).
    normalizedHostingConfigs;
exports.getNormalizedHostingConfig = getNormalizedHostingConfig;
